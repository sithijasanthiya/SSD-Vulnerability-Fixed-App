import { GoogleAuthProvider, getAuth, signInWithPopup } from "firebase/auth";
import { firebaseApp } from "../firebase";
import { useDispatch } from "react-redux";
import { setCredentials } from "../redux/features/auth/authSlice";
import { toast } from "react-toastify";
import { useLocation, useNavigate } from "react-router-dom";

const OAuth = () => {
  const auth = getAuth(firebaseApp);
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const { search } = useLocation();
  const sp = new URLSearchParams(search);
  const redirect = sp.get("redirect") || "/";

  const handleOAuthClick = async () => {
    const provider = new GoogleAuthProvider();
    provider.setCustomParameters({ prompt: "select_account" });

    try {
      const responseFromGoogle = await signInWithPopup(auth, provider);
      const res = await fetch("/api/users/google-auth", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username: responseFromGoogle.user.displayName,
          email: responseFromGoogle.user.email,
        }),
      });

      const data = await res.json();
      if (res.ok) {
        dispatch(setCredentials({ ...data }));
        navigate(redirect);
      }
    } catch (error) {
      toast.error("Google authentication failed.");
    }
  };

  return (
    <div
      className="cursor-pointer bg-cyan-400 text-black w-fit px-4 py-2 rounded-md"
      onClick={handleOAuthClick}
    >
      Continue with google
    </div>
  );
};

export default OAuth;
